#!/usr/bin/env bash
# Don't use `set -e`

# === Docs / Help ===
alias devdocs="open https://devdocs.io/"

# === File management ===
alias is_symlink="test -L"
alias list="ls -halt"
alias folders_by_size="du -h -d 1 | sort -h"
alias folder_size="du -hs"
# tar flags:
# -c = created
# -z = compress
# -v = verbose
# -f = file / file as archive
# Can pass dirs and/or files
# Example: `tar -czvf output.tar.gz /dir/sub_dir file_a file_b`
alias tgz_create="tar -czvf"
alias tgz_list="tar -tzvf"
alias tgz_unpack="tar -xzvf"
alias exif="exiftool"
# -D = show with decimal
# -u = include unknown
# -U = include binary unknown
# Tip: exiftool supports JSON output! `-json`
alias exif_full="exiftool -D -u -U"
# Also works: magick identify -verbose ./file.jpg | grep Quality
alias get_jpeg_quality="exiftool -JPEGDigest -JPEGQualityEstimate"
alias get_file_mime="file --mime-type"

# === Data rendering / piping / inspecting / etc. ===
alias json_inspect="jless"

# === Process Management ===
alias check_last_command="[[ \$? -ne 0 ]] && echo 'Last command failed' || echo 'Last command succeeded'"

# == ASDF ==
alias asdf_update_listings="asdf plugin update"

# == Terminals, Shells ===
# = tmux =
alias tao="tmux_auto_open"
alias tmuxao="tmux_auto_open"
alias tmuxls="tmux ls"
alias tmuxss="tmux_session_select_and_attach"
alias tmuxsn="tmux_get_active_session_name"
alias tmuxws="tmux_window_select"
alias tmuxps="tmux_pane_select"
alias tmuxzp="tmux_pane_zoom_toggle"
alias tmuxz="tmux_pane_zoom_toggle"
alias tmuxconf-rl="tmux source-file ~/.tmux.conf"
alias tmuxhs="tmux split-window -h"
alias tmuxvs="tmux split-window -v"
alias tmuxkp="tmux kill-pane"
alias tmuxkw="tmux kill-window"
alias tmuxks="tmux kill-session"
alias tmuxds="tmux detach"
alias tmuxd="tmux detach"
alias tmuxrn="tmux rename-session"
alias tmuxnw="tmux_new_window"

# == Security ===
alias rand_pass="openssl rand -base64 32"

# === Global stuff ===
alias gtask="task -t ~/Taskfile.global.yml"
alias npmg="asdf_exec_with_global_version npm "
alias npxg="asdf_exec_with_global_version npx"
alias npxeg="npx_exec_global"
alias node_repl="node --experimental-repl-await"
alias ws="npx_exec_global local-web-server"

# === git ===
alias git_search="git log -p -G"
alias git_find_deleted="git log --full-history -- "
alias gca="git commit --amend"
alias gcan="git commit --amend --no-edit"
alias gl="git log"
alias git_commit_skip_hooks="git commit --no-verify"
alias gdwd="git_do_while_dirty"
# Pass message / stash name as last arg
alias gss="git stash push --staged -m"
# Ignore large changes
alias gdsi="git diff --staged -- . ':(exclude)package-lock.json' ':(exclude)**/package-lock.json' ':(exclude)yarn.lock' ':(exclude)**/yarn.lock'"
# Pretty diff
alias gdsp="git diff --staged --word-diff=color --word-diff-regex=. --color-words"
# 3rd party aliases (provided by oh-my-zsh)
#	https://github.com/ohmyzsh/ohmyzsh/blob/master/plugins/git/git.plugin.zsh
#	gd = git diff
#	gds = git diff --staged
#	... many more

# === Time tracking / productivity ===
alias jttu="npx_exec_global --package jtz-time-tracker-utils jttu"
alias jttu_dev="task --taskfile ~/jtzdev/jtz-time-tracker-utils/Taskfile.yml local -- "

# === work ===
alias work_time="jttu harvest rollup --target-user=just-me --target-week=this"
alias work_time_last="jttu harvest rollup --target-user=just-me --target-week=last"


# VS Code: Wayland rendering issues workaround:
# Using an alias for this is slightly easier than hard-coding a solution, since
# configuring requires touching a mostly undocumented set of files (e.g. `~/.vscode/arvg.json`)
# WARNING: I'm still running into issues having VSCode rendering correctly with Wayland; these flags are working, but
# require running "Developer: Reload Window" after first launch for some reason
if [[ $IS_WAYLAND -eq 1 ]]; then
	if (whereis code | grep -q '/snap/code'); then
		# https://github.com/microsoft/vscode/issues/202072
		alias code="echo 'Warning: Wayland flags cannot be set for snap-installed VS Code. Use .deb distribution instead.' && code"
	else
		# Note: 2>/dev/null used to suppress things like: `Warning: 'ozone-platform' is not in the list of known options, but still passed to Electron/Chromium.`
		alias code="code --ozone-platform=wayland --enable-features=UseOzonePlatform --ozone-platform-hint=wayland --enable-features=WaylandWindowDecorations 2>/dev/null"
	fi
fi
